## RDBMS - 관계형 데이터베이스 시스템

## SQL(Structured Query Language) - 모든 DBMS에서 사용 가능 => 표준 / 쿼리의 대소문자는 구분 X (단, 데이터의 대소문자는 구분)
c.f 대소문자 구분 -> 1. var binary로 데이터 타입 사용 2. varchar binary 3. binary()
- 종류: DDL / DML / DCL / TCL
- DML: CRUD(Create-Insert-POST / Retrieve-Select-GET / Update-Update-PUT / Delete - Delete - DELETE) 

-- ifnull(a, b) -> a가 null이면 b 
-- 논리연산 주의 (p.30)
-- escape: like '__#%' escape:'#' 
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________
0912
## SQL 식별자
-- 이름: 데이터베이스 이름, 테이블, 컬럼명, 제약
-- 예약어 사용 금지
-- 길이 제한: 30자 이내
-- 영문자, 숫자, 한글 사용(일부 고객 요청)
-- 대소문자 구분 X: 자동으로 대문자로 변환 처리
	>> 테이블 생성 시에 예제 설명
	
## SQL 구분
-- DDL (Data Definition Language)
	>>  데이터 정의어
	>> 객체 생성, 변경, 삭제
	>> 객체: 테이블, 인덱스, 뷰, 함수, 프로시저 등
	>> 생성: create table, view, index, ...
	>> 변경: alter table
	>> 삭제: drop table
-- DML (Data Maniputlation Language)
	>> 테이블 데이터 조작어
	>> 레코드 추가: insert
	>> 레코드 변경: update (객체 변경 -> alter, 레코드 변경 -> update)
	>> 레코드 삭제: delete (객체 삭제 -> drop, 레코드 삭제 -> delete)
	
	>> 레코드 조회(DQL: Data Query Language): select
	
-- TCL (Transaction Control Language)
	>> 트랜잭션 제어
	>> 트랜잭션: 데이터베이스의 논리적인 작업(업무) 단위
	>> commit, rollback, savepoint
	>> 예시: 계좌이체
	
-- DCL (Data Control Language)
	>> 데이터베이스의 데이터 제어
	>> 사용자 관리, 권한 관리, 접근 제약 등
	>> grant, revoke
	

## 레코드 조회(DQL: Data Query Language): select 구문
1. 기본 형식: 
	<mysql>
	select * | distinct 컬럼명1 ALIAS, 컬럼명2 "Alias Name",... | 수식 "alias"
		| 함수명() | sub-query;
		
	<oracle>	
	select
	from 테이블명;
	
	-- select 구문을 위한 가상의 테이블: dual;
	
2. 전체형식
	select 조회항목
	from 테이블명1 "테이블alias", 테이블명x "테이블alias"
	where 검색조건
	group by 그룹핑컬럼명1, 그룹핑컬럼명x
	having 그룹핑결과에대한조건
	order by 정렬할컬럼명 정렬방법, 정렬할컬럼명 정렬방법;
	
	-- 검색조건
		>> 컬럼명 연산자 값
		>> 컬럼명 연산자 값 (and | or | not) 컬럼명 연산자 값
		
		
	-- 정렬방법: 
		>> 올림차순: 기본(asc, 생략)
		>> 내림차순: desc
		>> 숫자: 작은숫자 부터
		>> 문자: a, 가 부터
		>> 날짜: 숫자동일 (오래된날짜 부터)

## 데이터 타입
-- 문자열
	>> 고정문자열: char(길이)	 	name char(10) => "a         " (길이에 맞는 공백문자)
	>> 가변문자열: varchar(길이) 	name varchar(10) => "a"
	>> 문자열 비교 시에 데이터 타입에 따른 공백 처리 주의
	>> 공백 제거 함수: ltrim(), rtrim(), trim()
	
-- 숫자
	>> 정수형: int, int(길이), tinyint, smallint, ...
	>> 실수형: decimal(M, D), float(), double()
	
-- 날짜/시간
	>> date
	>> datetime
	>> timestamp: time zone 정보도 함께 저장
	>> time
	
-- '문자열', '날짜및시간'
-- 123, 4567.89
-- `예약어를 식별자로 사용 또는 대소문자을 식별` (mysql만 가능, 권장 X)

## Function
-- SQL 표준 함수: DBMS에 독립적(공통)
-- DB 벤더 전용 함수: DBMS에 종속적(특정 DB 전용)
-- 사용자 정의 함수: PL/SQL

## 함수 종류
1. 단일행 함수명
	- 하나의 행에 대해서 하나의 결과를 반환하는 함수
	- 직원 이름의 길이: length('문자열')
2. 복수행 함수(그룹 함수)
	- 여러 개의 행에 대해서 연산 후 단일 결과를 반환하는 함수
	- count(*), count(컬럼명), max(), min(), avg()
	- select, group by 구문에서 사용
	
## 문자 관련 함수명
-- 문자열 길이
	length('문자열'): 
		>> 영문자, 숫자, 공백 => 1byte
		>> 한글: utf-8(3byte-mysql), utf-16(2byte)
		
## 날짜 연산: 이후 날짜/시간 (기준값만큼 더하기)
date_add(날짜, interval 기준값)
	- 기준값 숫자 day | month | week
	- 금일 대출한 도서의 반납 예정일: 도서 대출일로부터 7일 이후 반납 예정일
		>> date_add(now(), interval 7 day) 
## 날짜 연산: 이전 날짜 (기준값만큼 빼기)
date_sub(날짜, interval 기준값)

## 날짜 변환 함수
date_format('날짜형식문자열', '날짜형식지정')
- %Y: year
- %m: month
- %d: date

## 날짜 경과일수 함수
datediff(날짜1, 날짜2);

## null
-- 어떠한 값도 할당되지 않음
-- 레코드 추가, 변경 시에 값을 명시적 null, 레코드 추가 시에 컬럼 지정 X
-- null 여부 검색 연산자:
	>> is null
	>> is not null
-- null 연산을 수행 X
	>> 수당(comm): 0
	>> 수당(comm): null
-- 추석을 맞이해 직원들에게 특별 상여금 지급함. 
-- 특별 상여금은 (급여 + 수당)의 200%
-- 출력 형식: 부서번호, 사번, 급여, 수당, 특별 상여금
-- 부서별(올림차순) 특별 상여금이 높은 순서대로 정렬 조회




	
